import streamlit as st
import pandas as pd
import plotly.express as px

# Cargamos el dataframe desde un CSV
dfDatos = pd.read_csv('download.csv')  # Cambia la URL al archivo correcto
dfExport= pd.read_csv("export.csv")
dfImport = pd.read_csv("import.csv")

# Definimos los par치metros de configuraci칩n de la aplicaci칩n
st.set_page_config(
    page_title="An치lisis de Comercio en venezuela",  # T칤tulo de la p치gina
    page_icon="游늳",  # 칈cono
    layout="wide",  # Forma de layout ancho o compacto
    initial_sidebar_state="expanded"  # Sidebar expandido
)

# Declaramos los par치metros en la barra lateral
with st.sidebar:
    parAno = st.selectbox('A침o', options=dfDatos['Year'].unique(), index=0)  # Cambia 'Year' seg칰n tu dataset
    parPais = st.multiselect('Pa칤s', options=dfExport['Country'].unique())  # Cambia 'Country' seg칰n tu dataset

# Aplicamos los filtros
if parAno:
    dfDatoss = dfDatos[dfDatos['Year'] == parAno]

if len(parPais) > 0:
    dfExport = dfExport[dfExport['Country'].isin(parPais)]
    dfImport = dfImport[dfImport['Year'] == parAno]


# T칤tulo principal
st.header("Proyecto FAVFIX")
st.markdown("<h1 style='text-align: center; color: #4CAF50;'>An치lisis de Comercio Internacional en venezuela</h1>", unsafe_allow_html=True)


st.markdown("<h2 style='text-align: center; color: #555;'>Bienvenido a la Aplicaci칩n</h2>", unsafe_allow_html=True)

# Descripci칩n
st.markdown("<h3 style='text-align: center; color: #777;'>Explora los datos de comercio por a침o y secci칩n</h3>", unsafe_allow_html=True)

st.markdown("<hr style='border: 1px solid #4CAF50;'>", unsafe_allow_html=True)

# M칠tricas
c1, c2 = st.columns(2)
with c1:
    total_comercio = dfDatoss['Trade Value'].sum()  # Cambia 'Trade Value' seg칰n tu dataset
    st.metric("Valor Total de Comercio", f'US$ {total_comercio:,.0f}')

with c2:
    total_paises = dfExport['Country'].nunique()  # Cambia 'Country' seg칰n tu dataset
    st.metric("N칰mero de Pa칤ses que comercian con venezuela",f'{total_paises}')
    


# Gr치ficos
st.subheader('Evoluci칩n del Comercio del 2002 al 2022')
fig = px.line(dfDatos.groupby('Year').agg({'Trade Value': 'sum'}).reset_index(), x='Year', y='Trade Value', title='Evoluci칩n del Comercio', labels={'Trade Value': 'Valor del Comercio', 'Year': 'A침o'})
st.plotly_chart(fig, use_container_width=True)

df_analisis_seccion = dfDatoss.groupby('Section').agg({'Trade Value': 'sum'}).reset_index()

st.subheader('gasto de seccion en el a침o')
# Crear la gr치fica usando Plotly
fig = px.bar(df_analisis_seccion, x='Section', y='Trade Value', title=f'An치lisis de Comercio por Secci칩n en {parAno}', 
             labels={'Trade Value': 'Valor del Comercio', 'Section': 'Secci칩n'}, 
             color='Trade Value', 
             text='Trade Value')

# Mostrar la gr치fica
st.plotly_chart(fig, use_container_width=True)

# Gr치fico de comercio por pa칤s
st.subheader('Exportaciones e Importaciones por Pa칤s')
fig_pais = px.bar(dfExport.groupby('Country').agg({'Trade Value': 'sum'}).reset_index(), x='Country', y='Trade Value', title='Comercio por Pa칤s', color='Country', text_auto=',.0f', labels={'Trade Value': 'Valor del Comercio', 'Country': 'Pais'})
st.plotly_chart(fig_pais, use_container_width=True)



st.subheader('Importaciones por Pa칤s')
# Agrupar por secci칩n y sumar Trade Value para importaciones
df_analisis_seccion_import = dfImport.groupby('Country').agg({'Trade Value': 'sum'}).reset_index()

# Crear la gr치fica usando Plotly para importaciones
fig_import = px.bar(df_analisis_seccion_import, x='Country', y='Trade Value', title=f'An치lisis de Importaciones por Secci칩n en {parAno}', 
                     color='Country', text_auto=',.0f', labels={'Trade Value': 'Valor del Comercio', 'Country': 'Pais'})

# Mostrar la gr치fica
st.plotly_chart(fig_import, use_container_width=True)

# Mostramos las tablas de top de secciones
c1, c2 = st.columns(2)

# Agrupar por secci칩n y sumar Trade Value
dfSeccionesVentas = dfDatoss.groupby('Section').agg({'Trade Value': 'sum'}).reset_index()

with c1:    
    st.subheader('Top 10 secciones con mayor ganancia')
    st.table(dfSeccionesVentas.sort_values(by='Trade Value', ascending=False).head(10)[['Section', 'Trade Value']].reset_index())

with c2:    
    st.subheader('Top 10 secciones con menor ganancia')    
    st.table(dfSeccionesVentas.sort_values(by='Trade Value').head(10)[['Section', 'Trade Value']].reset_index())
    
# Agrupar por secci칩n y sumar Trade Value
dfSeccionesVentas = dfDatos.groupby('Section').agg({'Trade Value': 'sum'}).reset_index()

with c1:    
    st.subheader('Top 10 secciones con mayor ganancia de todos los tiempos')
    st.table(dfSeccionesVentas.sort_values(by='Trade Value', ascending=False).head(10)[['Section', 'Trade Value']].reset_index())

with c2:    
    st.subheader('Top 10 secciones con menor ganancia de todos los tiempos')    
    st.table(dfSeccionesVentas.sort_values(by='Trade Value').head(10)[['Section', 'Trade Value']].reset_index())
    
# Mostramos las tablas de top de pa칤ses
c1, c2 = st.columns(2)

# Agrupar por pa칤s y sumar Trade Value para exportaciones
dfPaisesExport = dfExport.groupby('Country').agg({'Trade Value': 'sum'}).reset_index()

with c1:    
    st.subheader('Top 10 pa칤ses con mayor exportaci칩n')
    st.table(dfPaisesExport.sort_values(by='Trade Value', ascending=False).head(10)[['Country', 'Trade Value']].reset_index())

with c2:    
    st.subheader('Top 10 pa칤ses con menor exportaci칩n')    
    st.table(dfPaisesExport.sort_values(by='Trade Value').head(10)[['Country', 'Trade Value']].reset_index())
    
    
# Mostramos las tablas de top de pa칤ses
c1, c2 = st.columns(2)

# Agrupar por pa칤s y sumar Trade Value para exportaciones
dfPaisesImport = dfImport.groupby('Country').agg({'Trade Value': 'sum'}).reset_index()

with c1:    
    st.subheader('Top 10 pa칤ses con mayor importaci칩n')
    st.table(dfPaisesImport.sort_values(by='Trade Value', ascending=False).head(10)[['Country', 'Trade Value']].reset_index())

with c2:    
    st.subheader('Top 10 pa칤ses con menor importaci칩n')    
    st.table(dfPaisesImport.sort_values(by='Trade Value').head(10)[['Country', 'Trade Value']].reset_index())




analisis_por_a침o = dfDatos.groupby('Year')['Trade Value'].agg([
    ('Total', 'sum'),
    ('Promedio', 'mean'),
    ('Cantidad_Registros', 'count')
]).round(2)

analisis_por_seccion = dfDatos.groupby('Section')['Trade Value'].agg([
    ('Total', 'sum'),
    ('Promedio', 'mean'),
    ('Cantidad_Registros', 'count')
]).round(2)
    
# Estad칤sticas generales
st.subheader("Estad칤sticas Generales")

# A침o con mayor comercio
a침o_mayor_comercio = analisis_por_a침o['Total'].idxmax()
valor_mayor_comercio = analisis_por_a침o['Total'].max()

# A침o con menor comercio
a침o_menor_comercio = analisis_por_a침o['Total'].idxmin()
valor_menor_comercio = analisis_por_a침o['Total'].min()

# Secci칩n con mayor comercio
seccion_mayor_comercio = analisis_por_seccion['Total'].idxmax()
valor_seccion_mayor_comercio = analisis_por_seccion['Total'].max()

# Secci칩n con menor comercio
seccion_menor_comercio = analisis_por_seccion['Total'].idxmin()
valor_seccion_menor_comercio = analisis_por_seccion['Total'].min()

# Mostrar las m칠tricas
col1, col2 = st.columns(2)

with col1:
    st.metric(label="A침o con Mayor Comercio", value=f"{a침o_mayor_comercio} (${valor_mayor_comercio:,.2f})")

with col2:
    st.metric(label="A침o con Menor Comercio", value=f"{a침o_menor_comercio} (${valor_menor_comercio:,.2f})")

col3, col4 = st.columns(2)

with col3:
    st.metric(label="Secci칩n con Mayor Comercio", value=f"{seccion_mayor_comercio} (${valor_seccion_mayor_comercio:,.2f})")

with col4:
    st.metric(label="Secci칩n con Menor Comercio", value=f"{seccion_menor_comercio} (${valor_seccion_menor_comercio:,.2f})")
    

# 3. Heatmap de comercio por a침o y las top 5 secciones
top_5_secciones = analisis_por_seccion.nlargest(5, 'Total').index.tolist()  # Cambia a .index para obtener las secciones
datos_heatmap = dfDatos[dfDatos['Section'].isin(top_5_secciones)]

# Crear la tabla din치mica
pivot_table = datos_heatmap.pivot_table(
    values='Trade Value', 
    index='Year',
    columns='Section',
    aggfunc='sum'
).fillna(0)  # Rellenar NaN con 0 para evitar problemas en el heatmap

# Crear el heatmap usando Plotly
fig_heatmap = px.imshow(
    pivot_table,
    labels=dict(x="Secci칩n", y="A침o", color="Valor del Comercio"),
    x=pivot_table.columns,
    y=pivot_table.index,
    color_continuous_scale='YlOrRd',
    title='Heatmap de Comercio: Top 5 Secciones por A침o'
)

# Mostrar el heatmap en Streamlit
st.plotly_chart(fig_heatmap, use_container_width=True)
